/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutUserImport } from './routes/_layout/user'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as LayoutUserUserIdImport } from './routes/_layout/user/$userId'
import { Route as LayoutUserUserIdDetailImport } from './routes/_layout/user_/$userId/detail'

// Create Virtual Routes

const LayoutUserIndexLazyImport = createFileRoute('/_layout/user/')()

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUserRoute = LayoutUserImport.update({
  path: '/user',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUserIndexLazyRoute = LayoutUserIndexLazyImport.update({
  path: '/',
  getParentRoute: () => LayoutUserRoute,
} as any).lazy(() =>
  import('./routes/_layout/user/index.lazy').then((d) => d.Route),
)

const LayoutUserUserIdRoute = LayoutUserUserIdImport.update({
  path: '/$userId',
  getParentRoute: () => LayoutUserRoute,
} as any)

const LayoutUserUserIdDetailRoute = LayoutUserUserIdDetailImport.update({
  path: '/user/$userId/detail',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/user': {
      id: '/_layout/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof LayoutUserImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/user/$userId': {
      id: '/_layout/user/$userId'
      path: '/$userId'
      fullPath: '/user/$userId'
      preLoaderRoute: typeof LayoutUserUserIdImport
      parentRoute: typeof LayoutUserImport
    }
    '/_layout/user/': {
      id: '/_layout/user/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof LayoutUserIndexLazyImport
      parentRoute: typeof LayoutUserImport
    }
    '/_layout/user/$userId/detail': {
      id: '/_layout/user/$userId/detail'
      path: '/user/$userId/detail'
      fullPath: '/user/$userId/detail'
      preLoaderRoute: typeof LayoutUserUserIdDetailImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutAboutRoute,
    LayoutUserRoute: LayoutUserRoute.addChildren({
      LayoutUserUserIdRoute,
      LayoutUserIndexLazyRoute,
    }),
    LayoutIndexRoute,
    LayoutUserUserIdDetailRoute,
  }),
  LoginRoute,
  RegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login",
        "/register"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/about",
        "/_layout/user",
        "/_layout/",
        "/_layout/user/$userId/detail"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_layout/about": {
      "filePath": "_layout/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/user": {
      "filePath": "_layout/user.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/user/$userId",
        "/_layout/user/"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/user/$userId": {
      "filePath": "_layout/user/$userId.tsx",
      "parent": "/_layout/user"
    },
    "/_layout/user/": {
      "filePath": "_layout/user/index.lazy.tsx",
      "parent": "/_layout/user"
    },
    "/_layout/user/$userId/detail": {
      "filePath": "_layout/user_/$userId/detail.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
